//DO NOT EDIT THIS FILE, it is generated by idlcpp
//http://www.idlcpp.org

#pragma once

#include "../pafcore/Utility.h"
#include "../pafcore/SmartPtr.h"
class Node;
namespace paf{ class ClassType; }


class Scene : public paf::Introspectable
{
public:
	static ::paf::ClassType* GetType();
	::paf::ClassType* getType()
	{
		return GetType();
	}
	void* getMemoryAddress()
	{
		return this;
	}

	Scene();



	friend class Node;
	Scene(const Scene&) = delete;
	Scene(Scene&&) = delete;
public:
	paf::SharedPtr<Node> Scene::getRootNode() const
	{
		return m_rootNode;
	}
public:
	void check__();
protected:
	paf::SharedPtr<Node> m_rootNode;

};
